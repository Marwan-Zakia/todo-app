{"version":3,"sources":["components/context/Settings.js","hooks/form.js","components/auth/context.js","components/auth/login.js","components/header.jsx","components/auth/auth.js","components/Form.jsx","components/list.jsx","components/todo/todo.js","components/setForm.jsx","app.js","index.js"],"names":["SettingContext","React","createContext","Settings","props","useState","toggeleComplte","settoggeleComplte","numberOfshow","setnumberOfshow","state","useEffect","str","localStorage","getItem","obj","JSON","parse","Number","numberOfItem","Provider","value","children","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","testUsers","admin","password","role","capabilities","editor","writer","LoginContext","LoginProvider","can","capability","user","includes","login","username","token","jwt","sign","process","validateToken","logout","setLoginState","verify","e","console","log","loggedIn","cookie","save","setState","qs","URLSearchParams","window","location","search","cookieToken","load","get","this","Component","Login","context","condition","className","onClick","onSubmit","placeholder","onChange","contextType","Header","xs","order","Heading","style","fontSize","color","to","marginTop","isLoggedIn","canDo","okToRender","Form","Card","interactive","width","height","type","defaultValue","min","max","List","toggleComplete","list","deleteItem","settings","useContext","numberOfPages","setnumberOfPages","usersPage","pagesUser","displayUsers","slice","map","item","margin","elevation","Elevation","TWO","text","assignee","difficulty","id","complete","toString","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","ToDo","setList","incomplete","setIncomplete","uuid","incompleteCount","filter","document","title","Container","fluid","Row","Col","items","SetForm","setItem","stringify","display","disply","reset","href","label","labelFor","dir","App","path","element","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2208a16.chunk.js","sourcesContent":["import React, { useState ,useEffect} from \"react\";\n\nexport const SettingContext = React.createContext();\n\nexport default function Settings(props) {\n  const [toggeleComplte, settoggeleComplte] = useState(false);\n  const [numberOfshow, setnumberOfshow] = useState(2);\n \n\n  const state = {\n    numberOfshow: numberOfshow,\n    toggeleComplte: toggeleComplte,\n\n  };\n\n  useEffect(() => {\n    let str = localStorage.getItem(\"settings\");\n    let obj = JSON.parse(str);\n    if (obj) {\n      settoggeleComplte(obj.numberOfshow);\n      setnumberOfshow(Number(obj.numberOfItem));\n    }\n    // localStorage.clear();\n  }, []);\n\n  return (\n    <SettingContext.Provider value={state}>\n      {props.children}\n    </SettingContext.Provider>\n  );\n}\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\nconst testUsers = {\n  admin: {password:'password', name:'Administrator', role:'admin', capabilities:['create','read','update','delete']},\n  editor: { password: 'password', name: 'Editor', role: 'editor', capabilities: ['read', 'update']},\n  writer: { password: 'password', name: 'Writer', role: 'writer', capabilities: ['create']},\n\n};\n\nexport const LoginContext = React.createContext();\n\nclass LoginProvider extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      can: this.can,\n      login: this.login,\n      logout: this.logout,\n      user: {capabilities:[]},\n    };\n  }\n\n  can = (capability) => {\n    return this?.state?.user?.capabilities?.includes(capability);\n  }\n\n  login = (username, password) => {\n    if (testUsers[username]) {\n      // Create a \"good\" token, like you'd get from a server\n      const token = jwt.sign(testUsers[username], process.env.REACT_APP_SECRET);\n      this.validateToken(token);\n    }\n  }\n\n  logout = () => {\n    this.setLoginState(false, null, {});\n  };\n\n  validateToken = token => {\n    try {\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET);\n      this.setLoginState(true, token, user);\n    }\n    catch (e) {\n      this.setLoginState(false, null, {});\n      console.log('Token Validation Error', e);\n    }\n\n  };\n\n  setLoginState = (loggedIn, token, user) => {\n    cookie.save('auth', token);\n    this.setState({ token, loggedIn, user });\n  };\n\n  componentDidMount() {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load('auth');\n    const token = qs.get('token') || cookieToken || null;\n    this.validateToken(token);\n  }\n\n  render() {\n    return (\n      <LoginContext.Provider value={this.state}>\n        {this.props.children}\n      </LoginContext.Provider>\n    );\n  }\n}\n\nexport default LoginProvider;\n","import React from \"react\";\nimport { When } from \"react-if\";\n\nimport { LoginContext } from \"./context.js\";\n\nclass Login extends React.Component {\n  static contextType = LoginContext;\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.context.login(this.state.username, this.state.password);\n  };\n\n  render() {\n    return (\n      <>\n        <When condition={this.context.loggedIn}>\n          <button className=\"btn btn-primary\" onClick={this.context.logout}>\n            Log Out\n          </button>\n        </When>\n\n        <When condition={!this.context.loggedIn}>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"UserName\"\n              name=\"username\"\n              onChange={this.handleChange}\n            />\n            <input\n              placeholder=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            <button className=\"btn btn-primary\">Log in</button>\n          </form>\n        </When>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Navbar, Alignment, Button } from \"@blueprintjs/core\";\nimport { Link } from \"react-router-dom\";\nimport Login from \"../components//auth/login\";\n\nexport default function Header() {\n  return (\n    <>\n      <Navbar>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\" xs={6} xs={{ order: \"first\" }}>\n              <Navbar.Heading\n                className=\"bp3-navbar-group bp3-align-left\"\n                style={{ fontSize: \"1.5rem\" }}\n              >\n                <Link style={{ color: \"blue\" }} to=\"/\">\n                  home\n                </Link>\n              </Navbar.Heading>\n              <Navbar.Heading\n                className=\"bp3-navbar-group bp3-align-left\"\n                style={{ fontSize: \"1.5rem\" }}\n              >\n                <Link style={{ color: \"blue\" }} to=\"/setting\">\n                  settings\n                </Link>\n              </Navbar.Heading>\n            </div>\n            <div className=\"col\" xs={6} xs={{ order: \"last\" }} >\n              <Login style={{marginTop:'20px'}} />\n            </div>\n          </div>\n        </div>\n      </Navbar>\n    </>\n  );\n}\n","import React from 'react';\nimport {When} from 'react-if';\n\nimport { LoginContext } from './context.js';\n\nclass Login extends React.Component {\n\n  static contextType = LoginContext;\n\n  render() {\n\n    const isLoggedIn = this.context.loggedIn;\n    const canDo = this.props.capability ? this.context.can(this.props.capability) : true;\n    const okToRender = isLoggedIn && canDo;\n\n    return (\n      <When condition={okToRender}>\n        {this.props.children}\n      </When>\n    );\n  }\n}\n\nexport default Login;\n","import { Button, FormGroup, InputGroup } from \"@blueprintjs/core\";\nimport Container from \"react-bootstrap/Container\";\nimport Auth from './auth/auth'\nimport Card from \"react-bootstrap/Card\";\nexport default function Form({ handleSubmit, handleChange }) {\n  return (\n      <Card interactive={true} style={{ width: \"20rem\", height: \"20rem\" }}>\n        <FormGroup>\n          <h2>Add To Do Item</h2>\n          <label>\n            <span>To Do Item</span>\n            <InputGroup\n              className={\"bp3-intent-primary\"}\n              onChange={handleChange}\n              name=\"text\"\n              type=\"text\"\n              placeholder=\"Item Details\"\n            />\n          </label>\n          <label>\n            <span>Assigned To</span>\n            <InputGroup\n              className={\"bp3-intent-primary\"}\n              onChange={handleChange}\n              name=\"assignee\"\n              type=\"text\"\n              placeholder=\"Assignee Name\"\n            />\n          </label>\n\n          <label>\n            <span>Difficulty</span>\n            <InputGroup\n              onChange={handleChange}\n              className={\"bp3-intent-primary\"}\n              defaultValue={3}\n              type=\"range\"\n              min={1}\n              max={5}\n              name=\"difficulty\"\n            />\n          </label>\n\n          <label>\n          <Auth capability={'create'}>\n            <Button\n              onClick={handleSubmit}\n              className={\"bp3-intent-primary\"}\n              type=\"submit\"\n            >\n              Add Item\n            </Button>\n            </Auth>\n          </label>\n        </FormGroup>\n      </Card>\n\n  );\n}\n","import Col from \"react-bootstrap/Col\";\nimport React, { useContext, useState } from \"react\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport ReactPaginate from \"react-paginate\";\nimport { SettingContext } from \"./context/Settings\";\nimport \"./list.css\";\nimport Auth from \"./auth/auth\";\nexport default function List({ toggleComplete, list, deleteItem }) {\n  const settings = useContext(SettingContext);\n  const [numberOfPages, setnumberOfPages] = useState(0);\n\n  const usersPage = settings.numberOfshow;\n  const pagesUser = numberOfPages * usersPage;\n  const displayUsers = list\n    .slice(pagesUser, pagesUser + usersPage)\n    .map((item) => {\n      return (\n        <Auth capability={\"read\"}>\n          <div key={item.id} style={{ width: \"650px\", margin: \"15px\" }}>\n            <Card interactive={true} elevation={Elevation.TWO}>\n              <p>{item.text}</p>\n              <p>\n                <small>Assigned to: {item.assignee}</small>\n              </p>\n              <p>\n                <small>Difficulty: {item.difficulty}</small>\n              </p>\n\n              <Auth capability={\"update\"}>\n                <Button\n                  className=\"bp3-intent-success\"\n                  onClick={() => toggleComplete(item.id)}\n                >\n                  Complete: {item.complete.toString()}\n                </Button>\n              </Auth>\n              <Auth capability={\"delete\"}>\n                <Button\n                  className=\"bp3-intent-danger\"\n                  onClick={() => deleteItem(item.id)}\n                >\n                  Delete: {item.complete.toString()}\n                </Button>\n              </Auth>\n            </Card>\n          </div>\n        </Auth>\n      );\n    });\n\n  const pageCount = Math.ceil(list.length / usersPage);\n  const changePage = ({ selected }) => {\n    setnumberOfPages(selected);\n  };\n  return (\n    <>\n      {displayUsers}\n      <Auth capability={\"read\"}>\n        <ReactPaginate\n          previousLabel={\"Previous\"}\n          nextLabel={\"Next\"}\n          pageCount={pageCount}\n          onPageChange={changePage}\n          containerClassName={\"paginationBttns\"}\n          previousLinkClassName={\"previousBttn\"}\n          nextLinkClassName={\"nextBttn\"}\n          disabledClassName={\"paginationDisabled\"}\n          activeClassName={\"paginationActive\"}\n        />\n      </Auth>\n    </>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport useForm from \"../../hooks/form.js\";\nimport Header from \"../header.jsx\";\nimport Form from \"../Form.jsx\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"../list.jsx\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Auth from '..//auth/auth';\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  return (\n    <>\n      <h1> To Do List: {incomplete} items pending</h1>\n      <Container fluid={\"md\"}>\n        <Row>\n          <Col xs={4} xs={{ order: \"first\" }}>\n          <Auth     >\n            <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n          </Auth>\n          </Col>\n\n          <Col xs={4} xs={{ order: \"last\" }}>\n          <Auth>\n\n            <List\n              incomplete={incomplete}\n              toggleComplete={toggleComplete}\n              list={list}\n              deleteItem={deleteItem}\n            />\n            </Auth>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport { FormGroup, Card, Elevation, Button, Switch } from \"@blueprintjs/core\";\n\nimport \"./todo/todo\";\n\nexport default function SetForm() {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let display = e.target.disply.value;\n    let numberOfItem = e.target.numberOfItem.value;\n    let obj = {\n      display: display,\n      numberOfItem: numberOfItem,\n    };\n    setItem(obj);\n    e.target.reset();\n    window.location.href = \"/\";\n  };\n  function setItem(obj) {\n    localStorage.setItem(\"settings\", JSON.stringify(obj));\n  }\n  return (\n    <div>\n      <div className=\"toDo\">\n        <Card interactive={true} elevation={Elevation.TWO}>\n          <form onSubmit={handleSubmit}>\n            <h2> Settings Tab</h2>\n            <FormGroup label=\"show completed tasks\" labelFor=\"disply\">\n              <select name=\"disply\" dir=\"auto\" className=\"bp3-input .modifier\">\n                <option value={true}>true</option>\n                <option value={false}>false</option>\n              </select>\n            </FormGroup>\n            <FormGroup label=\"Number of cards \" labelFor=\"assignee\">\n              <input\n                className=\"bp3-input .modifier\"\n                name=\"numberOfItem\"\n                type=\"text\"\n                placeholder=\"Assignee Name\"\n                dir=\"auto\"\n              />\n            </FormGroup>\n            <br />\n            <Button type=\"submit\">Add Item</Button>\n          </form>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"rsuite/styles/index.less\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Settings from \"./components/context/Settings\";\nimport SetForm from \"./components/setForm\";\nimport ToDo from \"./components/todo/todo.js\";\nimport Header from \"./components/header\";\n\nimport LoginContext from \"./components/auth/context\";\nimport Auth from \"./components/auth/auth\";\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <LoginContext>\n        <Header />\n        <Routes>\n          <Route\n            path=\"/setting\"\n            element={\n              <Auth capability={'create','read','update','delete'}>\n                <Settings>\n                  <SetForm />\n                </Settings>\n              </Auth>\n            }\n          />\n\n          <Route\n            path=\"/\"\n            element={\n              <Auth>\n                <Settings>\n                  <ToDo  />\n                </Settings>\n              </Auth>\n            }\n          />\n        </Routes>\n      </LoginContext>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nexport default function Main()  {\n  return (\n    <App />\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}